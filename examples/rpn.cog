~~ a basic rpn calculator provided by the-cellar, to show some of the features of cognate.
~~ example input and output:
~~ in: 2 5 + 3 * 1 - 4 /
~~ out: 5

Let Error? be False;

Def Math-op as (
	Let Op;
	Let Stack;
	Do If >= 2 Length Stack then (
		Let A be Index 0 of Stack;
		Let B be Index 1 of Stack;
		Let R be
			If == Op "+" then + A B
			If == Op "-" then - A B
			If == Op "*" then * A B
			If == Op "/" then / A B
			             else 0;
		Push R to Rest Rest Stack;
	) else (
		Set Error? to True;
		Print "Error: Stack Underflow";
		Stack
	)
);


Def Eval as (
	Let Expr;
	Let Tokens be Split on " " Expr;

	Set Error? to Empty? Tokens;

	push List ();
	For each in Tokens
		Case (Match-regex "^[-]?[0-9]+$") (Push Number)
		Case "+" (Math-op)
		Case "*" (Math-op)
		Case "-" (Math-op)
		Case "/" (Math-op)
		else (
			Set Error? to True;
			Put "Error: Unknown Token ";
			Print the token
		);
	Do If Not Error? (Print First) else ();
);

Print "Welcome to CogCalc, a simple RPN Calculator!";
Print "Entering REPL (type 'done' to exit):";
Put "> "; Input;
While (/= "done" Twin)
(
    Eval;
    Put "> "; Input;
);
Clear;
Print "Bye!";
