~~ a basic rpn calculator provided by the-cellar, to show some of the features of cognate.
~~ example input and output:
~~ in: 2 5 + 3 * 1 - 4 /
~~ out: 5

Def Math-op as (
    Let Op;
    Let Stack;
    Let A be First of Stack; 
    Let B be First of Rest of Stack;
    Let R be If == Op "+" then + A B
             If == Op "-" then - A B
             If == Op "*" then * A B
             If == Op "/" then / A B
             else 0;
    Push R to the Rest of Rest of Stack;
);

Def Stack-valid? as (>= 2 Length);

Def Eval as (
    Let Expr;
    Let Tokens be Split on " " with Expr;
    Let Error be False;
    Def Handle-error as (Let Op; Let Stack; Do If Not Stack-valid? Stack (Set Error to True) else (Math-op Op Stack));
    List ();
    For each in Tokens
        Case (Match-regex "[-]?[0-9]+") (Let N be Number; Push N)
        Case "+" (Handle-error)
        Case "*" (Handle-error)
        Case "-" (Handle-error)
        Case "/" (Handle-error)
        else (Set Error to True; Put "Error: Unknown Token "; Print);
    Do If Not Error (Print First) ();
);

Print "Welcome to CogCalc, a simple RPN Calculator!";
Print "Entering REPL (type 'done' to exit):";
Put "> "; Input;
While (/= "done" Triplet)
(
    Eval the expr Twin;
    Put "> "; Input;
);
Print "Bye!";
Clear;